name: CI/CD pour GitHub Pages
 
on:
  push:
    branches:
      - "main"
 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4
 
      - name: Construire le site
        run: |
          echo "Démarrage de la phase de construction..."
          # Dans un vrai projet, ce serait une commande 'npm run build'
          echo "Construction terminée"
          # Créer un dossier de sortie 'dist' pour le déploiement
          mkdir dist
          cp mon_site.html dist/mon_site.html
 
      - name: Archive des artefacts
        uses: actions/upload-artifact@v4
        with:
          name: github-pages    # <-- nom attendu !
          path: dist
 
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Téléchargement des artefacts
        uses: actions/download-artifact@v4
        with:
          name: github-pages    # <-- nom attendu !
          path: ./
 
      - name: Lancer des tests
        run: |
          echo "Démarrage des tests..."
          if [ -f "./mon_site.html" ]; then
            echo "Test réussi :  Le fichier mon_site.html existe."
          else
            echo "Test échoué : Le fichier mon_site.html est manquant."
            exit 1
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      pages: write   # Autorisation de déployer sur les pages GitHub
      id-token: write   # Autorisation de se connecter avec le jeton par défaut
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Télécharger l'artefact pour le déploiement
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: ./
      - name: Déploiement sur Github Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          # Chemin du contenu à publier
          # Si besoin, adapte ce chemin selon la structure de ton projet
          artifact_path: ./dist
